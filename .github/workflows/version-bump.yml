name: Weekly Version Bump

on:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight UTC

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js (if using Node.js project)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get latest version
        id: get_version
        run: |
          # Read version from package.json (if applicable) or another source file
          version=$(jq -r '.version' package.json)
          echo "::set-output name=current_version::$version"

      - name: Bump version
        id: bump_version
        run: |
          # Increment patch version (you can customize to increment minor/major)
          IFS='.' read -r major minor patch <<< "${{ steps.get_version.outputs.current_version }}"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "::set-output name=new_version::$new_version"
          # Update version in package.json or other source
          jq ".version = \"$new_version\"" package.json > temp.json && mv temp.json package.json

      - name: Get PRs merged last week
        id: get_prs
        run: |
          since_date=$(date -d "7 days ago" --utc +"%Y-%m-%dT%H:%M:%SZ")
          gh pr list --state merged --search "merged:>$since_date" --json title,number,url > merged_prs.json
          echo "::set-output name=pr_list::$(jq -c . merged_prs.json)"

      - name: Create PR comment
        id: create_pr_comment
        run: |
          prs=$(echo "${{ steps.get_prs.outputs.pr_list }}" | jq -r '.[] | "- [#\(.number)](\(.url)) \(.title)"')
          echo "Changes in this release:\n$prs" > pr_comment.txt

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release-v${{ steps.bump_version.outputs.new_version }}
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push origin release-v${{ steps.bump_version.outputs.new_version }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: release-v${{ steps.bump_version.outputs.new_version }}
          title: "Release Version ${{ steps.bump_version.outputs.new_version }}"
          body: |
            ## Summary of Changes
            Changes included in this release:

            ${{ steps.create_pr_comment.outputs.pr_list }}
